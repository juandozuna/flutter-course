// Mocks generated by Mockito 5.2.0 from annotations
// in section_8/test/unit_test/providers/repository_moks.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:firebase_auth/firebase_auth.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:section_8/domain/models/location_model.dart' as _i2;
import 'package:section_8/domain/repositories/auth_repository.dart' as _i3;
import 'package:section_8/domain/repositories/device_repository.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeDeviceLocation_0 extends _i1.Fake implements _i2.DeviceLocation {}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> signInWithEmailAndPassword(
          String? email, String? password) =>
      (super.noSuchMethod(
          Invocation.method(#signInWithEmailAndPassword, [email, password]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> signOut() =>
      (super.noSuchMethod(Invocation.method(#signOut, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<bool> isSignedIn() =>
      (super.noSuchMethod(Invocation.method(#isSignedIn, []),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<_i5.User?> getUser() =>
      (super.noSuchMethod(Invocation.method(#getUser, []),
          returnValue: Future<_i5.User?>.value()) as _i4.Future<_i5.User?>);
}

/// A class which mocks [DeviceRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeviceRepository extends _i1.Mock implements _i6.DeviceRepository {
  MockDeviceRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> getLocationPermissions() =>
      (super.noSuchMethod(Invocation.method(#getLocationPermissions, []),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<_i2.DeviceLocation> getDeviceLocation() =>
      (super.noSuchMethod(Invocation.method(#getDeviceLocation, []),
              returnValue:
                  Future<_i2.DeviceLocation>.value(_FakeDeviceLocation_0()))
          as _i4.Future<_i2.DeviceLocation>);
}
